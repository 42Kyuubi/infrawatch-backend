{
    "swagger": "2.0",
    "info": {
        "title": "API InfraWatch",
        "description": "API for managing the InfraWatch system.",
        "version": "1.0.0"
    },
    "host": "infrawatch-backend.onrender.com",
    "basePath": "/",
    "schemes": [
        "http"
    ],
    "paths": {
        "/": {
            "get": {
                "summary": "Check API status",
                "description": "Returns a status message to confirm the API is running.",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "API is online",
                        "schema": {
                            "type": "string",
                            "example": "APi InfraWatch ON..."
                        }
                    }
                }
            }
        },
        "/auth/signin": {
            "post": {
                "summary": "Authenticate a user",
                "description": "Logs in a user with email and password and returns an authentication token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "User credentials for login",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "email": {
                                    "type": "string",
                                    "format": "email",
                                    "example": "user@example.com"
                                },
                                "password": {
                                    "type": "string",
                                    "example": "password123"
                                }
                            },
                            "required": [
                                "email",
                                "password"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "token": {
                                    "type": "string",
                                    "example": "jwt.token.here"
                                },
                                "user": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "example": "123e4567-e89b-12d3-a456-426614174000"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "user@example.com"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid credentials",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string",
                                    "example": "Invalid login credentials"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "summary": "List all users",
                "description": "Returns a list of all users. Requires admin permission.",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "List of users returned successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "example": "123e4567-e89b-12d3-a456-426614174000"
                                    },
                                    "username": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "john.doe@example.com"
                                    },
                                    "role": {
                                        "type": "string",
                                        "example": "admin"
                                    },
                                    "company_id": {
                                        "type": "string",
                                        "example": "company_123"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string",
                                    "example": "Token inv√°lido ou ausente"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/create": {
            "post": {
                "summary": "Create a new user",
                "description": "Creates a new user. Requires admin permission.",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "User data for creation",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "username": {
                                    "type": "string",
                                    "example": "Jane Doe"
                                },
                                "email": {
                                    "type": "string",
                                    "format": "email",
                                    "example": "jane.doe@example.com"
                                },
                                "password": {
                                    "type": "string",
                                    "example": "newpassword123"
                                },
                                "role": {
                                    "type": "string",
                                    "example": "user"
                                }
                            },
                            "required": [
                                "username",
                                "email",
                                "password",
                                "role"
                            ]
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "example": "123e4567-e89b-12d3-a456-426614174000"
                                },
                                "username": {
                                    "type": "string",
                                    "example": "Jane Doe"
                                },
                                "email": {
                                    "type": "string",
                                    "example": "jane.doe@example.com"
                                },
                                "role": {
                                    "type": "string",
                                    "example": "user"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "summary": "Get user by ID",
                "description": "Returns a single user by their ID.",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The ID of the user to retrieve."
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "User found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "example": "123e4567-e89b-12d3-a456-426614174000"
                                },
                                "username": {
                                    "type": "string",
                                    "example": "John Doe"
                                },
                                "email": {
                                    "type": "string",
                                    "example": "john.doe@example.com"
                                },
                                "role": {
                                    "type": "string",
                                    "example": "admin"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string",
                                    "example": "Failed to get user by ID: No rows found"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete a user",
                "description": "Deletes a user by their ID. Requires admin permission.",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The ID of the user to delete."
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User deleted successfully"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "patch": {
                "summary": "Partially update a user",
                "description": "Updates one or more fields of a user by their ID. Requires admin permission.",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The ID of the user to update."
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The fields to update",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "username": {
                                    "type": "string",
                                    "example": "Jane Doe"
                                },
                                "role": {
                                    "type": "string",
                                    "example": "developer"
                                },
                                "company_id": {
                                    "type": "string",
                                    "example": "company_456"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "example": "123e4567-e89b-12d3-a456-426614174000"
                                },
                                "username": {
                                    "type": "string",
                                    "example": "Jane Doe"
                                },
                                "email": {
                                    "type": "string",
                                    "example": "john.doe@example.com"
                                },
                                "role": {
                                    "type": "string",
                                    "example": "developer"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/systems": {
            "get": {
                "summary": "List all systems",
                "description": "Returns a list of all systems. Requires authentication.",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "List of systems returned successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "example": "123e4567-e89b-12d3-a456-426614174000"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "System A"
                                    },
                                    "owner_user_id": {
                                        "type": "string",
                                        "example": "user_id_123"
                                    },
                                    "id_type": {
                                        "type": "string",
                                        "example": "type_id_456"
                                    },
                                    "connection_type": {
                                        "type": "string",
                                        "enum": [
                                            "api",
                                            "snmp",
                                            "ping",
                                            "webhook"
                                        ],
                                        "example": "api"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "up",
                                            "maintenance",
                                            "down"
                                        ],
                                        "example": "up"
                                    },
                                    "criticality_level": {
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "sla_target": {
                                        "type": "integer",
                                        "example": 99
                                    },
                                    "check_interval": {
                                        "type": "integer",
                                        "example": 60
                                    },
                                    "target": {
                                        "type": "string",
                                        "example": "http://example.com"
                                    },
                                    "company_id": {
                                        "type": "string",
                                        "example": "company_123"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }, "post": {
                "summary": "Create a new system",
                "description": "Creates a new system. Requires authentication.",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "System data for creation",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "example": "RCS WEBSITE-CENTRAL"
                                },
                                "owner_user_id": {
                                    "type": "string",
                                    "example": "user_id_123"
                                },
                                "id_type": {
                                    "type": "string",
                                    "example": "da87b9ce-43bf-4283-9431-3b9a58d31c41"
                                },
                                "connection_type": {
                                    "type": "string",
                                    "enum": [
                                        "api",
                                        "snmp",
                                        "ping",
                                        "webhook"
                                    ],
                                    "example": "api"
                                },
                                "status": {
                                    "type": "string",
                                    "enum": [
                                        "up",
                                        "maintenance",
                                        "down"
                                    ],
                                    "example": "up"
                                },
                                "criticality_level": {
                                    "type": "integer",
                                    "example": 2
                                },
                                "sla_target": {
                                    "type": "integer",
                                    "example": 100
                                },
                                "check_interval": {
                                    "type": "integer",
                                    "example": 12
                                },
                                "target": {
                                    "type": "string",
                                    "example": "https://www.google.com"
                                }
                            },
                            "required": [
                                "name",
                                "owner_user_id",
                                "id_type",
                                "connection_type",
                                "status",
                                "criticality_level",
                                "sla_target",
                                "check_interval",
                                "target"
                            ]
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "System created successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "example": "123e4567-e89b-12d3-a456-426614174000"
                                },
                                "name": {
                                    "type": "string",
                                    "example": "RCS WEBSITE-CENTRAL"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/systems/{id}": {
            "get": {
                "summary": "Get system by ID",
                "description": "Returns a single system by its ID. Requires authentication.",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The ID of the system to retrieve."
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "System found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "example": "123e4567-e89b-12d3-a456-426614174000"
                                },
                                "name": {
                                    "type": "string",
                                    "example": "System A"
                                },
                                "description": {
                                    "type": "string",
                                    "example": "Description for system A."
                                },
                                "created_at": {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "System not found"
                    }
                }
            },
            "delete": {
                "summary": "Delete a system",
                "description": "Deletes a system by its ID. Requires authentication.",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The ID of the system to delete."
                    }
                ],
                "responses": {
                    "204": {
                        "description": "System deleted successfully"
                    },
                    "404": {
                        "description": "System not found"
                    }
                }
            },
            "patch": {
                "summary": "Partially update a system",
                "description": "Updates one or more fields of a system. Requires authentication.",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The ID of the system to update."
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The fields to update",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "example": "Updated System B"
                                },
                                "status": {
                                    "type": "string",
                                    "enum": [
                                        "up",
                                        "maintenance",
                                        "down"
                                    ],
                                    "example": "down"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "System updated successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "example": "123e4567-e89b-12d3-a456-426614174000"
                                },
                                "name": {
                                    "type": "string",
                                    "example": "Updated System B"
                                },
                                "status": {
                                    "type": "string",
                                    "example": "down"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "System not found"
                    }
                }
            }
        },
        "/systems/type/all": {
            "get": {
                "summary": "List all system types",
                "description": "Returns a list of all system types. Requires authentication.",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "List of system types returned successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "example": "type_id_1"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Server"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Physical or virtual server."
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/systems/type/create": {
            "post": {
                "summary": "Create a new system type",
                "description": "Creates a new system type. Requires authentication.",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "System type data for creation",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "example": "Database"
                                }
                            },
                            "required": [
                                "name"
                            ]
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "System type created successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "example": "type_id_2"
                                },
                                "name": {
                                    "type": "string",
                                    "example": "Database"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/systems/type/{id}": {
            "get": {
                "summary": "Get system type by ID",
                "description": "Returns a single system type by its ID.",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The ID of the system type to retrieve."
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "System type found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "example": "type_id_1"
                                },
                                "name": {
                                    "type": "string",
                                    "example": "Server"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "System type not found"
                    }
                }
            },
            "delete": {
                "summary": "Delete a system type",
                "description": "Deletes a system type by its ID. Requires authentication.",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The ID of the system type to delete."
                    }
                ],
                "responses": {
                    "204": {
                        "description": "System type deleted successfully"
                    },
                    "404": {
                        "description": "System type not found"
                    }
                }
            },
            "patch": {
                "summary": "Partially update a system type",
                "description": "Updates one or more fields of a system type. Requires authentication.",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The ID of the system type to update."
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The fields to update",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "example": "Virtual Machine"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "System type updated successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "example": "type_id_1"
                                },
                                "name": {
                                    "type": "string",
                                    "example": "Virtual Machine"
                                },
                                "description": {
                                    "type": "string",
                                    "example": "Physical or virtual server."
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "System type not found"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "bearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header",
            "description": "JWT Authorization header using the Bearer scheme. Example: 'Bearer {token}'"
        }
    }
}
